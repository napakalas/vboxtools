#!/usr/bin/env bash
set -e

cleanup () {
    warn "error with installation"
    forcepoweroff_vm "${VBOX_NAME}" 15
    return 1
}

# include related libraries
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source $DIR/../lib/gentoo

# process command line arguments first to set environment variables from
# valid command line arguments
export ARGPARSERS="common gentoo"

# assigning creation only variables here.
# TODO figure out how to best potentially override them?/Users/ymun794/Documents/pmr2/vboxtools/bin/activatevm
source $DIR/../share/config/vboxtools/gentoo-base

argparse "$@"

locate_gentoo_archives
if [ -z $_SKIP_GENTOO_VERIFY ]; then
    verify_gentoo_archives
fi

create_vm gentoo || \
    die "failed to create vm ${VBOX_NAME} for gentoo build"

checkenvfile GENTOO_STAGE3 GENTOO_PORTAGE

VBoxManage startvm "${VBOX_NAME}"

# ensure all the VM setup is executed and checked in one step in own
# subshell
(
    set -e
    prepare_gentoo_boot_iso_environment

    scp "${VBOX_SSH_FLAGS[@]}" "${GENTOO_STAGE3}" \
        root@$VBOX_IP:stage3-amd64.tar

    scp "${VBOX_SSH_FLAGS[@]}" "${GENTOO_PORTAGE}" \
        root@$VBOX_IP:portage.tar

    rsync -re "ssh $(printf "'%s' " "${VBOX_SSH_FLAGS[@]}")" \
      "${GENTOO_FILES}/" root@$VBOX_IP:gentoo_files

    ssh "${VBOX_SSH_FLAGS[@]}" root@$VBOX_IP ./gentoo_files/init.sh
) &

# wait for that to complete.
wait $! || cleanup

# the VBOX_IP is only available inside the subshell, re-capture this so
# that it will be available for use on the final message.
activate_vm "${VBOX_NAME}"

wait_vm_shutdown "${VBOX_NAME}" 15 || \
    die "'${VBOX_NAME}' did not shutdown; cannot continue with verification"

# timeout to wait for the VirtualBox registry to fully sync up
sleep 1

# remove the boot iso for proper bootup.
VBoxManage storageattach "${VBOX_NAME}" --storagectl IDE --port 0 --device 0 \
    --medium emptydrive

VBoxManage startvm "${VBOX_NAME}"

cat << EOF
Once the VM is fully booted, connect to it with the following command:
    $(dirname "${BASH_SOURCE[0]}")/connectvm "${VBOX_NAME}"

The following command will do the same (host key must be manually accepted):
    ssh -i "${VBOX_PRIVKEY}" root@${VBOX_IP}
EOF
